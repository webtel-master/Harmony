@page "/boards/{id}/{name}/{cardId?}"
@using Harmony.Application.DTO;
@using Harmony.Application.Helpers;
@using Harmony.Client.Infrastructure.Helper
@inject Microsoft.Extensions.Localization.IStringLocalizer<Board> _localizer

@if (KanbanStore.BoardLoading)
{
    <Loader />
}
else if (_unauthorisedAccess)
{
    <UnauthorisedView Text="You are unauthorised to view this board's content." />
}
else
{
    <MudPaper Elevation="25">
        <MudToolBar>
            <MudButton Variant="Variant.Text" OnClick="OpenCreateBoardListModal" StartIcon="@Icons.Material.Outlined.Checklist">Create list</MudButton>
            @if (KanbanStore.KanbanLists.Count() > 1)
            {
                <MudButton Variant="Variant.Text" OnClick="ReorderLists" StartIcon="@Icons.Material.Outlined.Reorder">Reorder lists</MudButton>
            }
            @if (KanbanStore.Board.Type == Domain.Enums.BoardType.Scrum)
            {
                <MudButton Variant="Variant.Text" OnClick="ViewBacklog" StartIcon="@Icons.Material.Outlined.ListAlt">Backlog</MudButton>

                <MudTooltip Delay="2000">
                    <ChildContent>
                        <MudButton Variant="Variant.Text" OnClick="ViewSprints" StartIcon="@Icons.Material.Outlined.Update">Sprints</MudButton>
                    </ChildContent>
                    <TooltipContent>
                        @if (KanbanStore.Board.ActiveSprints.Any())
                        {
                            <MudList>
                                <MudListSubheader>
                                    Active sprints
                                </MudListSubheader>
                                @foreach (var sprint in KanbanStore.Board.ActiveSprints)
                                {
                                    <MudListItem Class="mud-tertiary-text">@sprint.Name</MudListItem>
                                }
                            </MudList>
                        }
                        else
                        {
                            <MudAlert Severity="Severity.Warning">The board need's an active sprint to display cards. Click Sprints to setup an active sprint. </MudAlert>
                        }
                    </TooltipContent>
                </MudTooltip>
                @if (AddCardsDisabled)
                {
                    <MudTooltip>
                        <ChildContent>
                            <MudIcon Icon="@Icons.Material.Filled.Warning" Color="Color.Warning" Size="Size.Medium" />
                        </ChildContent>
                        <TooltipContent>
                            <MudAlert Severity="Severity.Warning">The board need's an active sprint to display cards. Click Sprints to setup an active sprint. </MudAlert>
                        </TooltipContent>
                    </MudTooltip>
                }
            }
            @if (KanbanStore.KanbanCards.Any())
            {
                <MudTooltip Text="Toggle card's description visibility">
                    <MudToggleIconButton @bind-Toggled:get="@CardDescriptionVisibility"
                                         @bind-Toggled:set="@ToggleCardDescriptionVisibility"
                                         Icon="@Icons.Material.Filled.VisibilityOff" Color="@Color.Error" Title="Off"
                                         ToggledIcon="@Icons.Material.Filled.Visibility" ToggledColor="@Color.Tertiary" ToggledTitle="On" />
                </MudTooltip>
            }
            <MudSpacer />
            <MudButton Variant="Variant.Text" OnClick="OpenShareBoardModal" StartIcon="@Icons.Material.Outlined.Share">Share board</MudButton>
            <MudMenu AnchorOrigin="Origin.BottomRight" Size="Size.Small" TransformOrigin="Origin.TopRight" Icon="@Icons.Material.Filled.MoreVert" IconColor="Color.Secondary">
                <MudButton Color="Color.Error" StartIcon="@Icons.Material.Outlined.Delete"
                           OnClick="ViewArchivedItems">ARCHIVED ITEMS</MudButton>
            </MudMenu>
        </MudToolBar>

    </MudPaper>
    @if (!KanbanStore.KanbanLists.Any())
    {
        <MudContainer Class="mt-16">
            <MudText Typo="Typo.h3" Align="Align.Center" GutterBottom="true">Empty board :(</MudText>
            <MudText Align="Align.Center">Looks like this board is currently empty. Here's a few suggestions to help you start with.</MudText>
            <MudGrid Class="mt-8 d-flex justify-center">
                <MudItem xs="12" sm="8">
                    <MudCard Elevation="25" Class="rounded-lg pb-4">
                        <MudCardHeader>
                            <CardHeaderContent>
                                <MudText Typo="Typo.h5" Align="Align.Center">@KanbanStore.Board.Title</MudText>
                                </CardHeaderContent>
                            </MudCardHeader>
                            <MudCardContent>
                                <MudList Class="mx-auto mt-4">
                                    <MudListItem Icon="@Icons.Material.Filled.List">
                                        Create some basic board lists to track your project's progress. e.g. <i>TODO</i>, <i>IN PROGRESS</i>, <i>REVIEW</i> & <i>DONE</i>
                                    </MudListItem>
                                    <MudListItem Icon="@Icons.Material.Filled.Share">
                                        Click <b>Share board</b> find your team members and share your board with your team members
                                    </MudListItem>
                                    <MudListItem Icon="@Icons.Material.Filled.Task">
                                        Add tasks to your lists and start monitor your project!
                                    </MudListItem>
                                </MudList>
                            </MudCardContent>
                            <MudCardActions Class="d-flex justify-center">
                                <MudButton Variant="Variant.Filled" Color="Color.Primary" Size="Size.Large"
                                           Style="width:50%;" OnClick="OpenCreateBoardListModal">Start Now</MudButton>
                            </MudCardActions>
                        </MudCard>
                    </MudItem>
                </MudGrid>
            </MudContainer>
    }
    else
    {
        <MudDropContainer T="CardDto" @ref="_dropContainer"
                          Items="KanbanStore.KanbanCards"
                          CanDropClass="mud-border-success" NoDropClass="mud-border-error"
                          ItemsSelector="@((item,column) => item.BoardListId.ToString() == column)"
                          ItemDropped="CardMoved" Class="d-flex flex-row">
            <ChildContent>
                <MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="d-flex flex-nowrap gap-4 overflow-auto flex-row mud-height-full">
                    @foreach (var item in KanbanStore.KanbanLists.OrderBy(l => l.Position))
                    {
                        <MudPaper Elevation="0" Width="300px"
                                  Style="height:calc(100vh - 180px);overflow:auto"
                                  Class="px-4 my-4 flex-none mud-background-gray rounded-lg mud-height-full">
                            <MudToolBar DisableGutters="true">
                                <EditableTextField For="@(() => item.Title)" OnEdit="(editing) => item.TitleEditing = editing"
                                                   OnSave="(text) => SaveBoardListTitle(item.Id, text)"
                                                   Text="@item.Title" />
                                <MudSpacer />
                                @if (!item.TitleEditing)
                                {
                                    @if (item.CardStatus != Domain.Enums.BoardListCardStatus.DONE)
                                    {
                                        <MudIconButton Style="margin-bottom:10px" Size="Size.Small" Class="align-self-end" Icon="@Icons.Material.Filled.Add"
                                                       OnClick="@(() => AddCard(item))"
                                                       aria-label="add" Disabled="AddCardsDisabled"></MudIconButton>
                                    }
                                    <MudMenu Style="margin-bottom:10px" Size="Size.Small" Icon="@Icons.Material.Rounded.MoreHoriz" AnchorOrigin="Origin.BottomRight" TransformOrigin="Origin.TopRight"
                                             Class="align-self-end" ListClass="pa-2 d-flex flex-column" PopoverClass="mud-elevation-25">
                                        <MudButton Color="Color.Error" StartIcon="@Icons.Material.Outlined.Delete"
                                                   Disabled="item.CardStatus == Domain.Enums.BoardListCardStatus.DONE" OnClick="@( () => ArchiveList(item))">Archive</MudButton>
                                    </MudMenu>
                                }
                            </MudToolBar>
                            <MudDropZone T="CardDto" Identifier="@item.Id.ToString()" Style="min-height:10px" AllowReorder="true" />
                            @if (item.TotalPages > 1)
                            {
                                <div class="d-flex flex-column align-center my-4">
                                    <MudPagination Size="Size.Small" Variant="Variant.Outlined"
                                                   SelectedChanged="(page) => LoadListCards(item.Id, page)"
                                                   BoundaryCount="1" MiddleCount="1" Count="@item.TotalPages" />
                                </div>
                            }
                            @if (item.CardStatus.HasValue && item.CardStatus
                           == Domain.Enums.BoardListCardStatus.DONE)
                            {
                                <MudIconButton Title="Items on this list will be considered as DONE" Icon="@Icons.Material.Outlined.Check"
                                               Style="position:absolute;bottom:20px;" Color="Color.Tertiary"></MudIconButton>
                            }
                        </MudPaper>
                    }
                </MudContainer>
            </ChildContent>
            <ItemRenderer>
                <span id="@context.Id.ToString()" />
                <MudCard @onclick="() => EditCard(context)" Elevation="25" Class="pa-4 rounded-lg my-3 cursor-pointer">
                    <MudCardHeader Class="pa-0">
                        <MudText Typo="Typo.body1">@context.Title</MudText>
                        </MudCardHeader>
                        <MudCardContent Class="pa-0 mt-2">
                            <MudStack Justify="Justify.SpaceBetween">
                                @if (context.Labels.Any())
                            {
                                <MudPaper Class="d-flex flex-wrap" Elevation="0">
                                    @foreach (var label in context.Labels)
                                    {
                                        <MudTooltip Text="@label.Title">
                                            <MudPaper Style="@($"color:{Colors.LightGreen.Accent3}; background-color:{label.Colour};")"
                                                      Height="8px" Width="40px" Elevation="5" Class=" mr-2 mb-2 rounded-lg"></MudPaper>
                                        </MudTooltip>
                                    }
                                </MudPaper>
                            }
                            @if (!string.IsNullOrEmpty(context.Description) && CardDescriptionVisibility)
                            {
                                <MudPaper Style="max-height:170px;overflow-y:auto;padding:10px 0;margin-bottom:10px;">@((MarkupString)context.Description)</MudPaper>
                            }
                            <MudStack>

                                <div class="flex flex-wrap gap-4">
                                    @if (context.StartDate != null || context.DueDate != null)
                                    {
                                        <MudChip Icon="@Icons.Material.Filled.DateRange" Label="true"
                                                 Size="Size.Small" Variant="Variant.Text" Color="Color.Default">@CardHelper.DisplayDates(context.StartDate, context.DueDate)</MudChip>
                                    }
                                    @if (context.TotalItems > 0)
                                    {
                                        <MudChip Icon="@Icons.Material.Filled.Checklist" Label="true"
                                                 Size="Size.Small" Variant="Variant.Text" Color="@(context.TotalItemsCompleted == context.TotalItems ? Color.Tertiary : Color.Default)">@context.TotalItemsCompleted / @context.TotalItems</MudChip>
                                    }
                                    @if (context.TotalChildren > 0)
                                    {
                                        <MudTooltip Delay="2500" Text="@($"Card contains {context.TotalChildren} child issues")">
                                            <MudChip Icon="@Icons.Material.Filled.Workspaces" Label="true"
                                                     Size="Size.Small" Variant="Variant.Text" Color="@(Color.Default)">@context.TotalChildren</MudChip>
                                            </MudTooltip>
                                    }
                                    @if (context.TotalAttachments > 0)
                                    {
                                        <MudChip Icon="@Icons.Material.Filled.Attachment" Label="true"
                                                 Size="Size.Small" Variant="Variant.Text" Color="Color.Default">@context.TotalAttachments</MudChip>
                                    }
                                    @if (context.TotalComments > 0)
                                    {
                                        <MudChip Icon="@Icons.Material.Filled.Comment" Label="true"
                                                 Size="Size.Small" Variant="Variant.Text" Color="Color.Default">@context.TotalComments</MudChip>
                                    }
                                </div>
                                <MudStack Row="true" Justify="Justify.FlexEnd" AlignItems="AlignItems.Center">

                                    <MudChip Label="true" Size="Size.Small" Color="Color.Warning">@($"{KanbanStore.Board.Key}-{context.SerialNumber}")</MudChip>
                                    @if (context.IssueType != null)
                                    {
                                        <MudStack Row="true" AlignItems="AlignItems.End">
                                            <MudTooltip Text="@context.IssueType.Summary" Delay="2000">
                                                <MudIcon Size="Size.Medium" Icon="@ColorHelper.GetIssueTypeIcon(context.IssueType.Summary)"
                                                         Color="ColorHelper.GetIssueTypeColor(context.IssueType.Summary)" />
                                            </MudTooltip>
                                        </MudStack>
                                    }
                                    @if (KanbanStore.IsScrum)
                                    {
                                        <MudChip Variant="Variant.Text" Color="Color.Primary">
                                            @(context.StoryPoints?.ToString() ?? "-")
                                        </MudChip>
                                    }
                                    @if (context.Members.Any())
                                    {
                                        <MudAvatarGroup Max="2" Spacing="2" MaxColor="Color.Primary" MaxSize="Size.Small">
                                            @foreach (var member in context.Members)
                                            {
                                                if (string.IsNullOrEmpty(member.ProfilePicture))
                                                {
                                                    <MudAvatar Size="Size.Small" Color="Color.Default">@member.FirstName[0]@member.LastName[0]</MudAvatar>
                                                }
                                                else
                                                {
                                                    <MudAvatar Size="Size.Small" Color="Color.Default">
                                                        <MudImage Src="@(_clientConfiguration.GetServerResource(member.ProfilePicture))" title="@member.FullName" />
                                                    </MudAvatar>
                                                }
                                            }
                                        </MudAvatarGroup>
                                    }
                                </MudStack>

                            </MudStack>
                        </MudStack>

                    </MudCardContent>
                    <MudOverlay Visible="@context.IsUpdating" DarkBackground="true" Absolute="true">
                        <MudProgressCircular Color="Color.Secondary" Indeterminate="true" />
                    </MudOverlay>
                </MudCard>
            </ItemRenderer>
        </MudDropContainer>
    }
}